#ifndef TETRINOMES_H
#define TETRINOMES_H

enum Tetrinome { O, I, S, Z, L, J, T };

//[TETRINOME][ROTATION][BLOCK][dX/dY]
const int PIECES[7][4][4][2] = {
	// O
	{
		{ {0,0},{0,1},{-1,1},{-1,0} },
		{ {0,0},{0,1},{-1,1},{-1,0} },
		{ {0,0},{0,1},{-1,1},{-1,0} },
		{ {0,0},{0,1},{-1,1},{-1,0} }
	},
	// I
	{
		{ {0,0},{1,0},{-2,0},{-1,0} },
		{ {0,0},{0,1},{ 0,2},{0,-1} },
		{ {0,0},{1,0},{-2,0},{-1,0} },
		{ {0,0},{0,1},{ 0,2},{0,-1} }
	},
	// S
	{
		{ {0,0},{0,1},{-1,1},{1,0} },
		{ {0,0},{1,0},{1,1},{0,-1} },
		{ {0,0},{0,1},{-1,1},{1,0} },
		{ {0,0},{1,0},{1,1},{0,-1} }
	},
	// Z
	{
		{ {0,0},{0,1},{1,1},{-1,0} },
		{ {0,0},{0,1},{1,-1},{1,0} },
		{ {0,0},{0,1},{1,1},{-1,0} },
		{ {0,0},{0,1},{1,-1},{1,0} }
	},
	// L
	{
		{ {0,0},{1,0},{-1,1},{-1,0} },
		{ {0,0},{0,1},{1,1},{0,-1} },
		{ {0,0},{1,0},{1,-1},{-1,0} },
		{ {0,0},{0,1},{-1,-1},{0,-1} }
	},
	// J
	{
		{ {0,0},{1,0},{1,1},{-1,0} },
		{ {0,0},{0,1},{0,-1},{1,-1} },
		{ {0,0},{1,0},{-1,-1},{-1,0} },
		{ {0,0},{0,1},{-1,1},{0,-1} }
	},
	// T
	{
		{ {0,0},{1,0},{0,1},{-1,0} },
		{ {0,0},{1,0},{0,1},{0,-1} },
		{ {0,0},{1,0},{-1,0},{0,-1} },
		{ {0,0},{0,1},{-1,0},{0,-1} }
	}
};

//[TETRINOME][dX/dY]
const int START_COORDS[7][2] = {
	{0,-2},  //O
	{0,-2},  //I
	{-1,-2}, //S
	{-1,-2}, //Z
	{-1,-2}, //L
	{-1,-2}, //J
	{-1,-2}  //T
};

#endif
